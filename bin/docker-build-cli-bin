#!/bin/bash

set -eu

if [ $# -ne 0 ]; then
    echo "no arguments allowed for $(basename $0), given: $@" >&2
    exit 64
fi

bindir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
rootdir="$( cd $bindir/.. && pwd )"

. $bindir/_docker.sh
. $bindir/_tag.sh

dockerfile=$rootdir/cli/Dockerfile-bin

validate_go_deps_tag $dockerfile

(
    $bindir/docker-build-base
    $bindir/docker-build-go-deps
) >/dev/null

if [ -n "${CLI_OS:-}" ]; then
  OS="${CLI_OS}"
else
    sys=$(uname -s)
    if [ "$sys" = "Darwin" ]; then
        OS="darwin"
    elif [ "$sys" = "Linux" ]; then
        OS="linux"
    else
        echo "unknown OS: $sys" >&2
        exit 1
    fi
fi

name="cli-bin-${OS}"
tag="$(head_root_tag)"

docker_build "$name" "$tag" $dockerfile \
    --build-arg CLI_OS="$OS" \
    --build-arg CONDUIT_VERSION="$tag"

if [ -n "${CLI_EXPORT:-}" ]; then
    IMG=$(docker_repo "$name"):$tag
    ID=$(docker create "$IMG")

    DIR="$rootdir/target/cli-${tag}/$OS"
    mkdir -p "$DIR"

    if docker cp "$ID:/out/conduit-${OS}" "$DIR/conduit" ; then
        echo "$DIR/conduit"
    else
        docker rm "$ID" >/dev/null
        exit 1
    fi

    docker rm "$ID" >/dev/null
fi
