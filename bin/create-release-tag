#!/bin/bash

set -o errexit
set -o nounset

# Assert at least one argument was passed.
if [[ $# -lt 1 ]]; then
    echo "usage: ${0##*/} edge" >&2
    echo "usage: ${0##*/} stable x.x.x" >&2
    exit 1
fi

release_channel="$1"

# Verify the release channel.
release_channel_regex="(edge|stable)"
if [[ ! $release_channel =~ $release_channel_regex ]]; then
    echo "valid release channels: edge, stable"
    exit 1
fi

stable_tag=${2:-}
if [ ! -z $stable_tag ]; then
    # Assert the release channel is not `edge`.
    if [ $release_channel == "edge" ]; then
        echo "edge release channel does not take tag argument"
        exit 1
    fi

    # Verify the stable tag format.
    stable_tag_regex="^([0-9]+)\.([0-9]+)\.([0-9]+)$"
    if [[ ! $stable_tag =~ $stable_tag_regex ]]; then
        echo "stable tag incorrect"
        echo "expected example: 2.4.8"
        exit 1
    fi

    # Set the script global `release_tag` variable.
    release_tag="stable-$stable_tag"
fi

if [ $release_channel == "edge" ]; then
    edge_tag_regex="(edge)-([0-9]{2})\.([0-9]{1,2})\.([0-9]+)"
    url="https://run.linkerd.io/install-edge"

    # Get the current edge version.
    current_edge=$(curl -sL $url | awk -v tag_format="$edge_tag_regex" '$0 ~ tag_format {print}')

    # Get the third and fourth groups of the regex; they are the month and
    # month minor values for the current edge version.
    current_mm=$(echo $current_edge | sed -n -E "s/.*$edge_tag_regex}$/\3/p")
    current_xx=$(echo $current_edge | sed -n -E "s/.*$edge_tag_regex}$/\4/p")

    yy=$(date +"%y")
    
    # Strip leading zero
    new_mm=$(date +"%-m")

    # If this is a new month, `new_xx` should be 1; otherwise increment it.
    if [ ! $new_mm == $current_mm ]; then
        new_xx="1"
    else
        new_xx=$((current_xx+1))
    fi

    # Set the script global `release_tag` variable.
    new_edge_tag="edge-$yy.$new_mm.$new_xx"
    release_tag=$new_edge_tag
fi

bindir=$( cd "${BASH_SOURCE[0]%/*}" && pwd )
# shellcheck source=bin/_release.sh
tmp=$(. "$bindir"/_release.sh; extract_release_notes)

# Create a signed tag with the commit message.
git tag -s -F "$tmp" "$release_tag"

# Success message
echo "$release_tag tag created and signed."
echo ""
echo "tag: $release_tag"
echo ""
echo "To push tag, run:"
echo "    git push origin $release_tag"
