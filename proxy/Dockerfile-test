# Proxy build and runtime
#
# When PROXY_UNOPTIMIZED is set and not empty, unoptimized rust artifacts are produced.
# This reduces build time and produces binaries with debug symbols, at the expense of
# runtime perforamnce.

ARG RUST_IMAGE=rust:1.26.0
ARG RUNTIME_IMAGE=gcr.io/runconduit/base:2017-10-30.01

## Builds the proxy as incrementally as possible.
FROM $RUST_IMAGE as build

WORKDIR /usr/src/conduit

# Fetch external dependencies.
#
# Mock out all local code and fetch external dependencies to ensure that external sources
# are cached.
RUN for d in proxy proxy/controller-grpc proxy/convert proxy/futures-mpsc-lossy proxy/router ; \
    do mkdir -p "${d}/src" && touch "${d}/src/lib.rs" ; \
    done
COPY Cargo.toml Cargo.lock ./
COPY proxy/Cargo.toml                       proxy/Cargo.toml
COPY proxy/controller-grpc/Cargo.toml       proxy/controller-grpc/Cargo.toml
COPY proxy/convert/Cargo.toml               proxy/convert/Cargo.toml
COPY proxy/futures-mpsc-lossy/Cargo.toml    proxy/futures-mpsc-lossy/Cargo.toml
COPY proxy/router/Cargo.toml                proxy/router/Cargo.toml
RUN cargo fetch --locked

# Build libraries, leaving the proxy and gRPC bindings mocked out.
COPY proxy/convert             proxy/convert
COPY proxy/futures-mpsc-lossy  proxy/futures-mpsc-lossy
COPY proxy/router              proxy/router
RUN  cargo build --frozen
# Build gRPC bindings, leaving the proxy mocked out.
COPY proto/proxy proto/proxy
COPY proto/common proto/common
COPY proxy/controller-grpc proxy/controller-grpc
RUN cargo build -p conduit-proxy-controller-grpc --frozen

# Test the proxy using pre-built dependencies.
COPY proxy/src      proxy/src
COPY proxy/tests    proxy/tests
RUN cargo test --frozen
