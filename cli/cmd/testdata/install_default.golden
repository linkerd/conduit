### Namespace ###
kind: Namespace
apiVersion: v1
metadata:
  name: conduit

### Service Account Controller ###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: conduit-controller
  namespace: conduit

### RBAC ###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: conduit-controller
rules:
- apiGroups: ["extensions"]
  resources: ["deployments", "replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services"]
  verbs: ["list", "get", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: conduit-controller
  namespace: conduit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: conduit-controller
subjects:
- kind: ServiceAccount
  name: conduit-controller
  namespace: conduit

### Service Account Prometheus ###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: conduit-prometheus
  namespace: conduit

### RBAC ###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: conduit-prometheus
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: conduit-prometheus
  namespace: conduit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: conduit-prometheus
subjects:
- kind: ServiceAccount
  name: conduit-prometheus
  namespace: conduit

### Controller ###
---
kind: Service
apiVersion: v1
metadata:
  name: api
  namespace: conduit
  labels:
    conduit.io/control-plane-component: controller
  annotations:
    conduit.io/created-by: conduit/cli undefined
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: controller
  ports:
  - name: http
    port: 8085
    targetPort: 8085

---
kind: Service
apiVersion: v1
metadata:
  name: proxy-api
  namespace: conduit
  labels:
    conduit.io/control-plane-component: controller
  annotations:
    conduit.io/created-by: conduit/cli undefined
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: controller
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    conduit.io/created-by: conduit/cli undefined
  creationTimestamp: null
  labels:
    conduit.io/control-plane-component: controller
  name: controller
  namespace: conduit
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        conduit.io/created-by: conduit/cli undefined
        conduit.io/proxy-version: undefined
      creationTimestamp: null
      labels:
        conduit.io/control-plane-component: controller
        conduit.io/control-plane-ns: conduit
    spec:
      containers:
      - args:
        - public-api
        - -addr=:8085
        - -metrics-addr=:9995
        - -telemetry-addr=127.0.0.1:8087
        - -tap-addr=127.0.0.1:8088
        - -log-level=info
        image: gcr.io/runconduit/controller:undefined
        imagePullPolicy: IfNotPresent
        name: public-api
        ports:
        - containerPort: 8085
          name: http
        - containerPort: 9995
          name: admin-http
        resources: {}
      - args:
        - destination
        - -addr=:8089
        - -metrics-addr=:9999
        - -log-level=info
        image: gcr.io/runconduit/controller:undefined
        imagePullPolicy: IfNotPresent
        name: destination
        ports:
        - containerPort: 8089
          name: grpc
        - containerPort: 9999
          name: admin-http
        resources: {}
      - args:
        - proxy-api
        - -addr=:8086
        - -metrics-addr=:9996
        - -destination-addr=:8089
        - -telemetry-addr=:8087
        - -log-level=info
        image: gcr.io/runconduit/controller:undefined
        imagePullPolicy: IfNotPresent
        name: proxy-api
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        resources: {}
      - args:
        - tap
        - -addr=:8088
        - -metrics-addr=:9998
        - -log-level=info
        image: gcr.io/runconduit/controller:undefined
        imagePullPolicy: IfNotPresent
        name: tap
        ports:
        - containerPort: 8088
          name: grpc
        - containerPort: 9998
          name: admin-http
        resources: {}
      - args:
        - telemetry
        - -addr=:8087
        - -metrics-addr=:9997
        - -ignore-namespaces=kube-system
        - -prometheus-url=http://prometheus:9090
        - -log-level=info
        image: gcr.io/runconduit/controller:undefined
        imagePullPolicy: IfNotPresent
        name: telemetry
        ports:
        - containerPort: 8087
          name: grpc
        - containerPort: 9997
          name: admin-http
        resources: {}
      - env:
        - name: CONDUIT_PROXY_LOG
          value: warn,conduit_proxy=info
        - name: CONDUIT_PROXY_CONTROL_URL
          value: tcp://localhost:8086
        - name: CONDUIT_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: CONDUIT_PROXY_PRIVATE_LISTENER
          value: tcp://127.0.0.1:4140
        - name: CONDUIT_PROXY_PUBLIC_LISTENER
          value: tcp://0.0.0.0:4143
        - name: CONDUIT_PROXY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONDUIT_PROXY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONDUIT_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONDUIT_PROXY_DESTINATIONS_AUTOCOMPLETE_FQDN
          value: Kubernetes
        image: gcr.io/runconduit/proxy:undefined
        imagePullPolicy: IfNotPresent
        name: conduit-proxy
        ports:
        - containerPort: 4143
          name: conduit-proxy
        resources: {}
        securityContext:
          runAsUser: 2102
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190"
        image: gcr.io/runconduit/proxy-init:undefined
        imagePullPolicy: IfNotPresent
        name: conduit-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
      serviceAccount: conduit-controller
status: {}
---
kind: Service
apiVersion: v1
metadata:
  name: web
  namespace: conduit
  labels:
    conduit.io/control-plane-component: web
  annotations:
    conduit.io/created-by: conduit/cli undefined
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: web
  ports:
  - name: http
    port: 8084
    targetPort: 8084
  - name: admin-http
    port: 9994
    targetPort: 9994

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    conduit.io/created-by: conduit/cli undefined
  creationTimestamp: null
  labels:
    conduit.io/control-plane-component: web
  name: web
  namespace: conduit
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        conduit.io/created-by: conduit/cli undefined
        conduit.io/proxy-version: undefined
      creationTimestamp: null
      labels:
        conduit.io/control-plane-component: web
        conduit.io/control-plane-ns: conduit
    spec:
      containers:
      - args:
        - -addr=:8084
        - -metrics-addr=:9994
        - -api-addr=api:8085
        - -static-dir=/dist
        - -template-dir=/templates
        - -uuid=deaab91a-f4ab-448a-b7d1-c832a2fa0a60
        - -controller-namespace=conduit
        - -log-level=info
        image: gcr.io/runconduit/web:undefined
        imagePullPolicy: IfNotPresent
        name: web
        ports:
        - containerPort: 8084
          name: http
        - containerPort: 9994
          name: admin-http
        resources: {}
      - env:
        - name: CONDUIT_PROXY_LOG
          value: warn,conduit_proxy=info
        - name: CONDUIT_PROXY_CONTROL_URL
          value: tcp://proxy-api.conduit.svc.cluster.local:8086
        - name: CONDUIT_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: CONDUIT_PROXY_PRIVATE_LISTENER
          value: tcp://127.0.0.1:4140
        - name: CONDUIT_PROXY_PUBLIC_LISTENER
          value: tcp://0.0.0.0:4143
        - name: CONDUIT_PROXY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONDUIT_PROXY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONDUIT_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONDUIT_PROXY_DESTINATIONS_AUTOCOMPLETE_FQDN
          value: Kubernetes
        image: gcr.io/runconduit/proxy:undefined
        imagePullPolicy: IfNotPresent
        name: conduit-proxy
        ports:
        - containerPort: 4143
          name: conduit-proxy
        resources: {}
        securityContext:
          runAsUser: 2102
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190"
        image: gcr.io/runconduit/proxy-init:undefined
        imagePullPolicy: IfNotPresent
        name: conduit-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
status: {}
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus
  namespace: conduit
  labels:
    conduit.io/control-plane-component: prometheus
  annotations:
    conduit.io/created-by: conduit/cli undefined
spec:
  type: ClusterIP
  selector:
    conduit.io/control-plane-component: prometheus
  ports:
  - name: http
    port: 9090
    targetPort: 9090

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    conduit.io/created-by: conduit/cli undefined
  creationTimestamp: null
  labels:
    conduit.io/control-plane-component: prometheus
  name: prometheus
  namespace: conduit
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        conduit.io/created-by: conduit/cli undefined
        conduit.io/proxy-version: undefined
      creationTimestamp: null
      labels:
        conduit.io/control-plane-component: prometheus
        conduit.io/control-plane-ns: conduit
    spec:
      containers:
      - args:
        - --storage.tsdb.retention=6h
        - --config.file=/etc/prometheus/prometheus.yml
        image: prom/prometheus:v2.1.0
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          name: http
        resources: {}
        volumeMounts:
        - mountPath: /etc/prometheus
          name: prometheus-config
          readOnly: true
      - args:
        - proxy
        - -p
        - "8001"
        image: buoyantio/kubectl:v1.6.2
        name: kubectl
        resources: {}
      - env:
        - name: CONDUIT_PROXY_LOG
          value: warn,conduit_proxy=info
        - name: CONDUIT_PROXY_CONTROL_URL
          value: tcp://proxy-api.conduit.svc.cluster.local:8086
        - name: CONDUIT_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: CONDUIT_PROXY_PRIVATE_LISTENER
          value: tcp://127.0.0.1:4140
        - name: CONDUIT_PROXY_PUBLIC_LISTENER
          value: tcp://0.0.0.0:4143
        - name: CONDUIT_PROXY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONDUIT_PROXY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONDUIT_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONDUIT_PROXY_DESTINATIONS_AUTOCOMPLETE_FQDN
          value: Kubernetes
        image: gcr.io/runconduit/proxy:undefined
        imagePullPolicy: IfNotPresent
        name: conduit-proxy
        ports:
        - containerPort: 4143
          name: conduit-proxy
        resources: {}
        securityContext:
          runAsUser: 2102
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190"
        image: gcr.io/runconduit/proxy-init:undefined
        imagePullPolicy: IfNotPresent
        name: conduit-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
      serviceAccount: conduit-prometheus
      volumes:
      - configMap:
          name: prometheus-config
        name: prometheus-config
status: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: prometheus-config
  namespace: conduit
  labels:
    conduit.io/control-plane-component: prometheus
  annotations:
    conduit.io/created-by: conduit/cli undefined
data:
  prometheus.yml: |-
    global:
      scrape_interval: 10s
      evaluation_interval: 10s

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['conduit']
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: ^admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: job
---
