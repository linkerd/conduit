# Default values for linkerd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

clusterDomain: &cluster_domain cluster.local
enableH2Upgrade: true
imagePullPolicy: &image_pull_policy IfNotPresent

# control plane version. See Proxy section for proxy version
LinkerdVersion: &linkerd_version edge-19.12.2

namespace: linkerd
omitWebhookSideEffects: false
webhookFailurePolicy: Ignore

# controller configuration
controllerImage: gcr.io/linkerd-io/controller
controllerLogLevel: &controller_log_level info
controllerReplicas: 1
controllerUID: 2103

# web dashboard configuration
dashboard:
  replicas: 1

# identity configuration
identity:
  issuer:
    scheme: linkerd.io/tls

    clockSkewAllowance: 20s

    # must match the expiry date in crtPEM
    crtExpiry:

    # control plane annotation - do not edit
    crtExpiryAnnotation: linkerd.io/identity-issuer-expiry

    issuanceLifeTime: 86400s

    tls:
      # PEM-encoded certificate
      crtPEM: |

      # PEM-encoded ECDSA private key
      keyPEM: |

  trustAnchorsPEM: |

  trustDomain: *cluster_domain

# grafana configuration
grafanaImage: gcr.io/linkerd-io/grafana

# heartbeat configuration
disableHeartBeat: false
heartbeatSchedule: "0 0 * * *"

# prometheus configuration
prometheusImage: prom/prometheus:v2.11.1
prometheusLogLevel: *controller_log_level

# Control Plane Trace Configuration
controlPlaneTracing: false

# proxy configuration
proxy:
  enableExternalProfiles: false
  image:
    name: gcr.io/linkerd-io/proxy
    pullPolicy: *image_pull_policy
    version: *linkerd_version
  logLevel: warn,linkerd2_proxy=info
  ports:
    admin: 4191
    control: 4190
    inbound: 4143
    outbound: 4140
  resources:
    cpu:
      limit: ""
      request: ""
    memory:
      limit: ""
      request: ""
  trace:
    collectorSvcAddr: ""
    collectorSvcAccount: default
  uid: 2102

# proxy-init configuration
proxyInit:
  ignoreInboundPorts: ""
  ignoreOutboundPorts: ""
  image:
    name: gcr.io/linkerd-io/proxy-init
    pullPolicy: *image_pull_policy
    version: v1.1.0
  resources:
    cpu:
      limit: 100m
      request: 10m
    memory:
      limit: 50Mi
      request: 10Mi

# proxy injector configuration
proxyInjector:
  # if empty, Helm will auto-generate these fields
  crtPEM: |

  keyPEM: |

# service profile validator configuration
profileValidator:
  # if empty, Helm will auto-generate these fields
  crtPEM: |

  keyPEM: |

# tap configuration
tap:
  # if empty, Helm will auto-generate these fields
  crtPEM: |

  keyPEM: |

# web configuration
webImage: gcr.io/linkerd-io/web

# control plane annotations - do not edit
createdByAnnotation: linkerd.io/created-by
proxyInjectAnnotation: linkerd.io/inject
proxyInjectDisabled: disabled

# control plane labels - do not edit
controllerComponentLabel: linkerd.io/control-plane-component
controllerNamespaceLabel: linkerd.io/control-plane-ns
linkerdNamespaceLabel: linkerd.io/is-control-plane

# If the namespace is controlled by an external tool or can't be installed with Helm
# you can disable its installation. In this case:
# - The namespace created by the external tool must match the namespace value above
# - The external tool needs to create the namespace with the label:
#     config.linkerd.io/admission-webhooks: disabled
installNamespace: true

# Node selection constraints for control-plane components
# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector.
nodeSelector:
  beta.kubernetes.io/os: linux
